---
- debug:
    msg: "{{ ansible_checkpoint_domain }}"

- name: List LSM gateway {{ item.name }}
  check_point.mgmt.cp_mgmt_run_script:
    script: LSMcli {{ ansible_host }} {{ ansible_user }} {{ ansible_password }} Show -N={{ item.name }}  -F=n
    script_name: Check if LSM gateways {{ item.name }} exists
    wait_for_task: true
    targets:
    - "{{ mgmt_server_name }}"
  register: check_lsm_gw_task

#- debug:
#    msg: "{{ check_lsm_gw_task['run-script'].tasks[0]['task-id'] }}"

- name: Check the List LSM gateway task to se if {{ item.name }} exists
  check_point.mgmt.checkpoint_task_facts:
    task_id: "{{ check_lsm_gw_task['run-script'].tasks[0]['task-id'] }}"
  register: check_lsm_gw_result

#- debug:
#    msg: "{{ check_lsm_gw_result['ansible_facts']['checkpoint_tasks']['tasks'][0]['task-details'][0]['statusDescription'] }}"

- name: Add LSM Small Office Gateway {{ item.name }}
  check_point.mgmt.cp_mgmt_run_script:
    script: LSMcli {{ ansible_host }} {{ ansible_user }} {{ ansible_password }} AddROBO {{ item.hw }} {{ item.name }} {{ item.lsm_profile }}
    script_name: Add LSM gateway {{ item.name }}
    targets:
    - "{{ mgmt_server_name }}"
  when:  check_lsm_gw_result['ansible_facts']['checkpoint_tasks']['tasks'][0]['task-details'][0]['statusDescription'] == "Name , ===="

- name: Set VPN certificate on Small Office Gateway {{ item.name }}
  check_point.mgmt.cp_mgmt_run_script:
    script: LSMcli {{ ansible_host }} {{ ansible_user }} {{ ansible_password }} ResetIke {{ item.name }} -CA=internal_ca
    script_name: Set VPN certificate on LSM gateway {{ item.name }}
    targets:
    - "{{ mgmt_server_name }}"
  ignore_errors: yes
  when:  check_lsm_gw_result['ansible_facts']['checkpoint_tasks']['tasks'][0]['task-details'][0]['statusDescription'] == "Name , ===="

- name: Set VPN domain on LSM gateway {{ item.name }}
  check_point.mgmt.cp_mgmt_run_script:
    script: LSMcli {{ ansible_host }} {{ ansible_user }} {{ ansible_password }} ModifyROBOTopology VPN1 {{ item.name }} -VPNDomain=external_ip_only
    script_name: Set VPN domain on LSM gateway {{ item.name }}
    targets:
    - "{{ mgmt_server_name }}"
  when:  check_lsm_gw_result['ansible_facts']['checkpoint_tasks']['tasks'][0]['task-details'][0]['statusDescription'] == "Name , ===="
 
- name: Set OTP SIC key on LSM gateway {{ item.name }}
  check_point.mgmt.cp_mgmt_run_script:
    script: LSMcli {{ ansible_host }} {{ ansible_user }} {{ ansible_password }} ResetSic {{ item.name }} {{ item.sickey }}
    script_name: Set OTP SIC key on LSM gateway {{ item.name }}
    targets:
    - "{{ mgmt_server_name }}"
  ignore_errors: yes
  when:  check_lsm_gw_result['ansible_facts']['checkpoint_tasks']['tasks'][0]['task-details'][0]['statusDescription'] == "Name , ===="

- name: Update LSM CO gateway with new information about LSM gateway {{ item.name }}
  check_point.mgmt.cp_mgmt_run_script:
    script: LSMcli {{ ansible_host }} {{ ansible_user }} {{ ansible_password }} UpdateCO {{ item.co_name }}
    script_name: Update LSM CO gateway with information about {{ item.name }} 
    targets:
    - "{{ mgmt_server_name }}"
  when:  check_lsm_gw_result['ansible_facts']['checkpoint_tasks']['tasks'][0]['task-details'][0]['statusDescription'] == "Name , ===="
